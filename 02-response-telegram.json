{
  "name": "Réponse Telegram Stage",
  "nodes": [
    {
      "parameters": {
        "updates": ["message", "callback_query"],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [-976, 272],
      "id": "6b4db6a1-80da-451d-9159-c8f5fe17dcc0",
      "name": "Telegram Trigger",
      "webhookId": "3d2bb72d-1e27-4142-8380-55291b3fdf97",
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {"caseSensitive": true, "leftValue": "", "typeValidation": "strict", "version": 2},
                "conditions": [{"leftValue": "={{$json.action}}", "rightValue": "APPLY", "operator": {"type": "string", "operation": "equals"}}],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {"caseSensitive": true, "leftValue": "", "typeValidation": "strict", "version": 2},
                "conditions": [{"leftValue": "={{$json.action}}", "rightValue": "SAVE", "operator": {"type": "string", "operation": "equals"}}],
                "combinator": "and"
              }
            },
            {
              "conditions": {
                "options": {"caseSensitive": true, "leftValue": "", "typeValidation": "strict", "version": 2},
                "conditions": [{"leftValue": "={{$json.action}}", "rightValue": "SKIP", "operator": {"type": "string", "operation": "equals"}}],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [-528, 256],
      "id": "661dbc30-de83-4d15-95ce-fe9fb74fdd67",
      "name": "Switch"
    },
    {
      "parameters": {
        "jsCode": "/**\n * Router Telegram — boutons inline, /cmd <id>, et \"reply\" sur une carte\n */\n\nfunction fnv1a64(str = '') {\n  let h = 0xcbf29ce484222325n;\n  const p = 0x100000001b3n;\n  for (let i = 0; i < str.length; i++) {\n    h ^= BigInt(str.charCodeAt(i));\n    h = (h * p) & 0xffffffffffffffffn;\n  }\n  return h.toString(16).padStart(16, '0');\n}\n\nfunction canon(u) {\n  try {\n    const x = new URL((u || '').trim());\n    x.hash = '';\n    ['utm_source','utm_medium','utm_campaign','utm_term','utm_content','gclid','fbclid','mc_cid','mc_eid','hss_channel','hss_channel_landing','utm_id','utm_name'].forEach(k => x.searchParams.delete(k));\n    const qs = x.searchParams.toString();\n    return x.origin + x.pathname + (qs ? '?' + qs : '');\n  } catch { return (u || '').trim(); }\n}\n\nfunction extractTitreFromText(txt = '') {\n  const first = String(txt).split('\\n')[0]?.trim() || '';\n  if (!first) return { titre: '' };\n  const idxEm = first.indexOf(' — ');\n  const idxHy = first.indexOf(' - ');\n  let idx = -1;\n  if (idxEm >= 0) idx = idxEm; else if (idxHy >= 0) idx = idxHy;\n  if (idx >= 0) {\n    const entreprise = first.slice(0, idx).trim();\n    const titre = first.slice(idx + 3).trim();\n    return { entreprise, titre };\n  }\n  return { entreprise: '', titre: first };\n}\n\nfunction extractUrlFromReplyMarkup(reply_markup) {\n  try {\n    const kb = reply_markup?.inline_keyboard || [];\n    for (const row of kb) {\n      for (const btn of row) {\n        if (btn && typeof btn.url === 'string' && btn.url.trim()) {\n          return canon(btn.url);\n        }\n      }\n    }\n  } catch {}\n  return '';\n}\n\nfunction idFromMessageCard(msg = {}) {\n  const txt = String(msg.text || '');\n  const { titre } = extractTitreFromText(txt);\n  const url = extractUrlFromReplyMarkup(msg.reply_markup);\n  if (!titre || !url) return null;\n  const id = fnv1a64(`${url}|${titre}`);\n  return { id_source: id, url, titre };\n}\n\nfunction normAction(s = '') {\n  const up = String(s).trim().toUpperCase();\n  if (up === 'APPLY') return 'APPLY';\n  if (up === 'SAVE' || up === 'SAUVER') return 'SAVE';\n  if (up === 'SKIP' || up === 'IGNORER' || up === 'IGNORE') return 'SKIP';\n  return '';\n}\n\nconst out = [];\n\nfor (const item of $input.all()) {\n  const u = item.json || {};\n\n  if (u.callback_query) {\n    const cb = u.callback_query;\n    const data = String(cb.data || '');\n    const [actionRaw, idMaybe] = data.split('|');\n    const action = normAction(actionRaw);\n    const chat_id = cb.message?.chat?.id;\n    const message_id = cb.message?.message_id;\n    let url = '';\n    let titre = '';\n    const parsed = idFromMessageCard(cb.message || {});\n    if (parsed) { url = parsed.url; titre = parsed.titre; }\n\n    out.push({\n      json: {\n        mode: 'cb',\n        action,\n        id_source: idMaybe || parsed?.id_source || null,\n        chat_id,\n        message_id,\n        cb_id: cb.id,\n        url: url || null,\n        titre: titre || null\n      }\n    });\n    continue;\n  }\n\n  if (u.message) {\n    const msg = u.message;\n    const chat_id = msg.chat?.id;\n    const txt = String(msg.text || '').trim();\n    const lower = txt.toLowerCase();\n\n    if (lower === '/ping') {\n      out.push({ json: { mode: 'cmd', action: 'PING', chat_id } });\n      continue;\n    }\n\n    const m = lower.match(/^\\/(apply|save|skip)\\s+([a-f0-9]{8,40})$/i);\n    if (m) {\n      out.push({ json: { mode: 'cmd', action: m[1].toUpperCase(), id_source: m[2], chat_id } });\n      continue;\n    }\n\n    const isKeyword = /^(postule|apply|sauver|save|skip|ignorer|ignore)$/i.test(lower);\n    const isBareCmd = /^\\/(apply|save|skip)$/i.test(lower);\n\n    if (msg.reply_to_message && (isKeyword || isBareCmd)) {\n      const parsed = idFromMessageCard(msg.reply_to_message);\n      if (parsed) {\n        let action = 'APPLY';\n        if (/sauver|save/i.test(lower)) action = 'SAVE';\n        if (/skip|ignorer|ignore/i.test(lower)) action = 'SKIP';\n        if (/^\\/save$/i.test(lower)) action = 'SAVE';\n        if (/^\\/skip$/i.test(lower)) action = 'SKIP';\n        if (/^\\/apply$/i.test(lower)) action = 'APPLY';\n\n        out.push({\n          json: {\n            mode: 'reply',\n            action,\n            id_source: parsed.id_source,\n            chat_id,\n            message_id: msg.reply_to_message.message_id,\n            url: parsed.url,\n            titre: parsed.titre\n          }\n        });\n        continue;\n      }\n    }\n\n    out.push({ json: { mode: 'cmd', action: 'HELP', chat_id, echo: txt } });\n    continue;\n  }\n\n  out.push({ json: { action: 'HELP' } });\n}\n\nreturn out;"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [-752, 272],
      "id": "7d1b749a-1fe6-41e9-9d63-3734b174352e",
      "name": "Code"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "list",
          "cachedResultName": "Stage_2026"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Stage"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_source": "={{ $json.id_source }}",
            "statut": "={{ $json.statut }}"
          },
          "matchingColumns": ["id_source"]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [-16, 272],
      "id": "5ecb1161-2537-4ef7-af47-2d6b73962d34",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CREDENTIAL_ID",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "resource": "callback",
        "queryId": "={{ $json.cb_id }}",
        "additionalFields": {
          "text": "Prise en compte..."
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [-208, 0],
      "id": "451afc29-a58d-4025-abb2-95f6ca03b660",
      "name": "Prise en compte...",
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "editMessageText",
        "chatId": "={{ $('Switch').item.json.chat_id }}",
        "messageId": "={{ $('Switch').item.json.message_id }}",
        "replyMarkup": "inlineKeyboard",
        "text": "✅ Demandé",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [16, 0],
      "id": "1cbf2eb2-218c-4d0e-a448-564d8e7b61b4",
      "name": "Validation",
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Sauver').item.json.chat_id }}",
        "text": "Ajouté à regarder plus tard.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [176, 272],
      "id": "02f90ecc-6c44-4b2b-b036-bfed424204bc",
      "name": "Ajouté aux favoris",
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "statut": "={{ $json.statut }}",
            "id_source": "={{ $json.id_source }}"
          },
          "matchingColumns": ["id_source"]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [-16, 560],
      "id": "72ea7d27-e55e-4a22-a6b1-5842b644c60e",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CREDENTIAL_ID",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Refusé2').item.json.chat_id }}",
        "text": "Bien noté, ignorer.",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [176, 560],
      "id": "c578672e-1341-49de-8423-59ac0d98a59b",
      "name": "Refusé",
      "credentials": {
        "telegramApi": {
          "id": "YOUR_TELEGRAM_CREDENTIAL_ID",
          "name": "Telegram Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {"id": "7def4e71-dbb0-48eb-bf27-fd6f5d46eee8", "name": "id_source", "value": "={{$json.id_source}}", "type": "string"},
            {"id": "d1486292-9487-42c2-aa32-c4c8a4669627", "name": "statut", "value": "plus_tard", "type": "string"}
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-208, 272],
      "id": "2cb98c34-2608-4472-9a87-f9ed44ec21b6",
      "name": "Sauver"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {"id": "7def4e71-dbb0-48eb-bf27-fd6f5d46eee8", "name": "id_source", "value": "={{$json.id_source}}", "type": "string"},
            {"id": "d1486292-9487-42c2-aa32-c4c8a4669627", "name": "statut", "value": "refusé", "type": "string"}
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-208, 560],
      "id": "3b59dad9-c640-4023-8706-7cac318b552e",
      "name": "Refusé2"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "YOUR_GOOGLE_SHEET_ID",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "id_source": "={{ $json.id_source }}",
            "statut": "={{ $json.statut }}"
          },
          "matchingColumns": ["id_source"]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [-16, -160],
      "id": "f876ae00-4ab6-4490-a7b3-26d73748c26b",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "YOUR_GOOGLE_SHEETS_CREDENTIAL_ID",
          "name": "Google Sheets Account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {"id": "7def4e71-dbb0-48eb-bf27-fd6f5d46eee8", "name": "id_source", "value": "={{$json.id_source}}", "type": "string"},
            {"id": "d1486292-9487-42c2-aa32-c4c8a4669627", "name": "statut", "value": "en cours", "type": "string"}
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [-208, -160],
      "id": "9ea7a273-2772-4a88-bbf8-0fa140d356df",
      "name": "En cours"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "YOUR_WORKFLOW_3_ID",
          "mode": "list"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {}
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.3,
      "position": [240, 0],
      "id": "e62e6084-509f-4f6d-aabe-8d5d1ee127c4",
      "name": "Call 'Création lettre'"
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {"main": [[{"node": "Code", "type": "main", "index": 0}]]},
    "Switch": {"main": [[{"node": "En cours", "type": "main", "index": 0}, {"node": "Prise en compte...", "type": "main", "index": 0}], [{"node": "Sauver", "type": "main", "index": 0}], [{"node": "Refusé2", "type": "main", "index": 0}]]},
    "Code": {"main": [[{"node": "Switch", "type": "main", "index": 0}]]},
    "Google Sheets": {"main": [[{"node": "Ajouté aux favoris", "type": "main", "index": 0}]]},
    "Prise en compte...": {"main": [[{"node": "Validation", "type": "main", "index": 0}]]},
    "Validation": {"main": [[{"node": "Call 'Création lettre'", "type": "main", "index": 0}]]},
    "Google Sheets1": {"main": [[{"node": "Refusé", "type": "main", "index": 0}]]},
    "Sauver": {"main": [[{"node": "Google Sheets", "type": "main", "index": 0}]]},
    "Refusé2": {"main": [[{"node": "Google Sheets1", "type": "main", "index": 0}]]},
    "En cours": {"main": [[{"node": "Google Sheets2", "type": "main", "index": 0}]]}
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "WILL_BE_REGENERATED",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "YOUR_N8N_INSTANCE_ID"
  },
  "id": "WILL_BE_REGENERATED",
  "tags": []
}
